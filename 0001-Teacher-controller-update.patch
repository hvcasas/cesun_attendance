From a8c2fd2ae2a895e6dca3be79c8f8fd81d81ee456 Mon Sep 17 00:00:00 2001
From: cd C:\Users\manuel\Documents\Tareas\9no Cuatrimestre\Proyecto Integrador II\cesun_attendance <manuel@.(none)>
Date: Mon, 4 Jul 2011 21:27:15 -0700
Subject: [PATCH] Teacher controller update

---
 Gemfile                                      |    2 +-
 Gemfile.lock                                 |   63 +---------------
 app/controllers/teachers_controller.rb       |   38 ++++++++++
 app/models/teacher.rb                        |    6 ++
 app/models/user.rb                           |    2 +-
 app/views/teachers/_form.html.erb            |   37 ++++++++++
 app/views/teachers/edit.html.erb             |    6 ++
 app/views/teachers/index.html.erb            |   31 ++++++++
 app/views/teachers/new.html.erb              |    5 ++
 app/views/teachers/show.html.erb             |   30 ++++++++
 config/routes.rb                             |    6 ++-
 db/migrate/20110614041733_create_teachers.rb |   16 ++++
 db/schema.rb                                 |  100 ++++++++++++++------------
 test/factories.rb                            |   12 +++-
 test/functional/teachers_controller_test.rb  |   59 +++++++++++++++
 test/unit/teacher_test.rb                    |   29 ++++++++
 16 files changed, 332 insertions(+), 110 deletions(-)
 create mode 100644 app/controllers/teachers_controller.rb
 create mode 100644 app/models/teacher.rb
 create mode 100644 app/views/teachers/_form.html.erb
 create mode 100644 app/views/teachers/edit.html.erb
 create mode 100644 app/views/teachers/index.html.erb
 create mode 100644 app/views/teachers/new.html.erb
 create mode 100644 app/views/teachers/show.html.erb
 create mode 100644 db/migrate/20110614041733_create_teachers.rb
 create mode 100644 test/functional/teachers_controller_test.rb
 create mode 100644 test/unit/teacher_test.rb

diff --git a/Gemfile b/Gemfile
index a7c4201..5b6fd10 100644
--- a/Gemfile
+++ b/Gemfile
@@ -15,7 +15,7 @@ group :test do
 end
 
 group :development do
-  gem 'metric_fu', :require => false
+  #gem 'metric_fu', :require => false
 end
 
 group :test, :development do
diff --git a/Gemfile.lock b/Gemfile.lock
index e82fe4d..de8e2a9 100644
--- a/Gemfile.lock
+++ b/Gemfile.lock
@@ -1,7 +1,6 @@
 GEM
   remote: http://rubygems.org/
   specs:
-    Saikuro (1.1.0)
     abstract (1.0.0)
     acl9 (0.12.0)
     actionmailer (3.0.7)
@@ -32,21 +31,12 @@ GEM
     activesupport (3.0.7)
     ansi (1.2.5)
     arel (2.0.10)
-    arrayfields (4.7.4)
     bcrypt-ruby (2.1.4)
+    bcrypt-ruby (2.1.4-x86-mingw32)
     builder (2.1.2)
-    chronic (0.3.0)
     chunky_png (1.2.0)
-    churn (0.0.13)
-      chronic (>= 0.2.3)
-      hirb
-      json_pure
-      main
-      ruby_parser (~> 2.0.4)
-      sexp_processor (~> 3.0.3)
     client_side_validations (3.0.2)
       activesupport (~> 3.0.0)
-    colored (1.2)
     compass (0.11.1)
       chunky_png (~> 1.1)
       fssm (>= 0.2.7)
@@ -61,21 +51,11 @@ GEM
     factory_girl_rails (1.0.1)
       factory_girl (~> 1.3)
       railties (>= 3.0.0)
-    fattr (2.2.0)
-    flay (1.4.2)
-      ruby_parser (~> 2.0)
-      sexp_processor (~> 3.0)
-    flog (2.5.1)
-      ruby_parser (~> 2.0)
-      sexp_processor (~> 3.0)
     fssm (0.2.7)
-    haml (3.1.1)
-    hirb (0.4.5)
     i18n (0.5.0)
     jquery-rails (1.0.7)
       railties (~> 3.0)
       thor (~> 0.14)
-    json_pure (1.5.1)
     kaminari (0.12.4)
       rails (>= 3.0.0)
     mail (2.2.19)
@@ -83,21 +63,6 @@ GEM
       i18n (>= 0.4.0)
       mime-types (~> 1.16)
       treetop (~> 1.4.8)
-    main (4.4.0)
-      arrayfields (>= 4.7.4)
-      fattr (>= 2.1.0)
-    metric_fu (2.1.1)
-      Saikuro (>= 1.1.0)
-      activesupport (>= 2.0.0)
-      chronic (~> 0.3.0)
-      churn (>= 0.0.7)
-      flay (>= 1.2.1)
-      flog (>= 2.3.0)
-      rails_best_practices (>= 0.6.4)
-      rcov (>= 0.8.3.3)
-      reek (>= 1.2.6)
-      roodi (>= 2.1.0)
-      syntax
     mime-types (1.16)
     mocha (0.9.12)
     mysql2 (0.3.2)
@@ -116,39 +81,17 @@ GEM
       activesupport (= 3.0.7)
       bundler (~> 1.0)
       railties (= 3.0.7)
-    rails_best_practices (0.9.0)
-      activesupport
-      colored
-      erubis
-      haml
-      i18n
-      ruby-progressbar
-      ruby_parser
     railties (3.0.7)
       actionpack (= 3.0.7)
       activesupport (= 3.0.7)
       rake (>= 0.8.7)
       thor (~> 0.14.4)
     rake (0.8.7)
-    rcov (0.9.9)
-    reek (1.2.8)
-      ruby2ruby (~> 1.2)
-      ruby_parser (~> 2.0)
-      sexp_processor (~> 3.0)
-    roodi (2.1.0)
-      ruby_parser
-    ruby-progressbar (0.0.10)
-    ruby2ruby (1.2.5)
-      ruby_parser (~> 2.0)
-      sexp_processor (~> 3.0)
-    ruby_parser (2.0.6)
-      sexp_processor (~> 3.0)
     sass (3.1.1)
-    sexp_processor (3.0.5)
     sqlite3 (1.3.3)
+    sqlite3 (1.3.3-x86-mingw32)
     sqlite3-ruby (1.3.3)
       sqlite3 (>= 1.3.3)
-    syntax (1.0.0)
     thor (0.14.6)
     treetop (1.4.9)
       polyglot (>= 0.3.1)
@@ -160,6 +103,7 @@ GEM
 
 PLATFORMS
   ruby
+  x86-mingw32
 
 DEPENDENCIES
   acl9
@@ -169,7 +113,6 @@ DEPENDENCIES
   factory_girl_rails
   jquery-rails
   kaminari
-  metric_fu
   mocha
   mysql2
   rails (= 3.0.7)
diff --git a/app/controllers/teachers_controller.rb b/app/controllers/teachers_controller.rb
new file mode 100644
index 0000000..289fc1d
--- /dev/null
+++ b/app/controllers/teachers_controller.rb
@@ -0,0 +1,38 @@
+class TeachersController < ApplicationController
+  before_filter :set_user
+  
+  def new
+   @teacher = @user.teacher.build
+  end
+  
+  def edit
+    @teacher = @user.teacher
+  end
+
+  def create
+    @user.teacher.build(params[:teacher])
+    if @teacher.save
+     redirect_to(user_teacher_path @user, :notice => 'teacher was successfully created.')
+    else
+     render :action => "new"
+    end
+  end
+
+  def update
+    if @user.teacher.update_attributes(params[:teacher])
+      redirect_to(user_teacher_path @user, :notice => 'teacher was successfully updated.')
+    else
+      render :action => "edit"
+    end
+  end
+
+  def destroy
+    @user.teacher.destroy
+    redirect_to(user_teacher_path @user)
+  end
+  
+  private
+  def set_user
+    @user = User.find params[:user_id]
+  end
+end
diff --git a/app/models/teacher.rb b/app/models/teacher.rb
new file mode 100644
index 0000000..3722c44
--- /dev/null
+++ b/app/models/teacher.rb
@@ -0,0 +1,6 @@
+class Teacher < ActiveRecord::Base
+  belongs_to :user
+  validates_uniqueness_of :control_number
+  validates_numericality_of :control_number
+  validates_presence_of :name, :paternal_surname, :user
+end 
\ No newline at end of file
diff --git a/app/models/user.rb b/app/models/user.rb
index 2b718ae..a4a47da 100644
--- a/app/models/user.rb
+++ b/app/models/user.rb
@@ -3,7 +3,7 @@ class User < ActiveRecord::Base
 
   validates_presence_of   :username
   validates_uniqueness_of :username
-  validates_format_of     :username, :with => /\A[a-z\-_.]+\Z/i
+  validates_format_of     :username, :with => /\A[a-z0-9\-_.]+\Z/i
 
   attr_accessor :login
   attr_accessible :login, :username, :email, :password, :password_confirmation, :remember_me
diff --git a/app/views/teachers/_form.html.erb b/app/views/teachers/_form.html.erb
new file mode 100644
index 0000000..592d21b
--- /dev/null
+++ b/app/views/teachers/_form.html.erb
@@ -0,0 +1,37 @@
+<%= form_for(@teacher) do |f| %>
+  <% if @teacher.errors.any? %>
+    <div id="error_explanation">
+      <h2><%= pluralize(@teacher.errors.count, "error") %> prohibited this teacher from being saved:</h2>
+
+      <ul>
+      <% @teacher.errors.full_messages.each do |msg| %>
+        <li><%= msg %></li>
+      <% end %>
+      </ul>
+    </div>
+  <% end %>
+
+  <div class="field">
+    <%= f.label :control_number %><br />
+    <%= f.text_field :control_number %>
+  </div>
+  <div class="field">
+    <%= f.label :name %><br />
+    <%= f.text_field :name %>
+  </div>
+  <div class="field">
+    <%= f.label :paternal_surname %><br />
+    <%= f.text_field :paternal_surname %>
+  </div>
+  <div class="field">
+    <%= f.label :maternal_surname %><br />
+    <%= f.text_field :maternal_surname %>
+  </div>
+  <div class="field">
+    <%= f.label :user_id %><br />
+    <%= f.text_field :user_id %>
+  </div>
+  <div class="actions">
+    <%= f.submit %>
+  </div>
+<% end %>
diff --git a/app/views/teachers/edit.html.erb b/app/views/teachers/edit.html.erb
new file mode 100644
index 0000000..b320ea7
--- /dev/null
+++ b/app/views/teachers/edit.html.erb
@@ -0,0 +1,6 @@
+<h1>Editing teacher</h1>
+
+<%= render 'form' %>
+
+<%= link_to 'Show', @teacher %> |
+<%= link_to 'Back', teachers_path %>
diff --git a/app/views/teachers/index.html.erb b/app/views/teachers/index.html.erb
new file mode 100644
index 0000000..863f533
--- /dev/null
+++ b/app/views/teachers/index.html.erb
@@ -0,0 +1,31 @@
+<h1>Listing teachers</h1>
+
+<table>
+  <tr>
+    <th>Control number</th>
+    <th>Name</th>
+    <th>Paternal surname</th>
+    <th>Maternal surname</th>
+    <th>User</th>
+    <th></th>
+    <th></th>
+    <th></th>
+  </tr>
+
+<% @teachers.each do |teacher| %>
+  <tr>
+    <td><%= teacher.control_number %></td>
+    <td><%= teacher.name %></td>
+    <td><%= teacher.paternal_surname %></td>
+    <td><%= teacher.maternal_surname %></td>
+    <td><%= teacher.user_id %></td>
+    <td><%= link_to 'Show', teacher %></td>
+    <td><%= link_to 'Edit', edit_teacher_path(teacher) %></td>
+    <td><%= link_to 'Destroy', teacher, :confirm => 'Are you sure?', :method => :delete %></td>
+  </tr>
+<% end %>
+</table>
+
+<br />
+
+<%= link_to 'New teacher', new_teacher_path %>
diff --git a/app/views/teachers/new.html.erb b/app/views/teachers/new.html.erb
new file mode 100644
index 0000000..7e3d550
--- /dev/null
+++ b/app/views/teachers/new.html.erb
@@ -0,0 +1,5 @@
+<h1>New teacher</h1>
+
+<%= render 'form' %>
+
+<%= link_to 'Back', teachers_path %>
diff --git a/app/views/teachers/show.html.erb b/app/views/teachers/show.html.erb
new file mode 100644
index 0000000..bdd87ae
--- /dev/null
+++ b/app/views/teachers/show.html.erb
@@ -0,0 +1,30 @@
+<p id="notice"><%= notice %></p>
+
+<p>
+  <b>Control number:</b>
+  <%= @teacher.control_number %>
+</p>
+
+<p>
+  <b>Name:</b>
+  <%= @teacher.name %>
+</p>
+
+<p>
+  <b>Paternal surname:</b>
+  <%= @teacher.paternal_surname %>
+</p>
+
+<p>
+  <b>Maternal surname:</b>
+  <%= @teacher.maternal_surname %>
+</p>
+
+<p>
+  <b>User:</b>
+  <%= @teacher.user_id %>
+</p>
+
+
+<%= link_to 'Edit', edit_teacher_path(@teacher) %> |
+<%= link_to 'Back', teachers_path %>
diff --git a/config/routes.rb b/config/routes.rb
index da08037..a9e6970 100644
--- a/config/routes.rb
+++ b/config/routes.rb
@@ -1,6 +1,10 @@
 CesunAttendance::Application.routes.draw do
   devise_for :users
-
+  
+  resources :users, :only => [] do
+    resource :teacher
+  end
+  
   devise_scope :user do
     root :to => 'devise/sessions#new', :via => :get
   end
diff --git a/db/migrate/20110614041733_create_teachers.rb b/db/migrate/20110614041733_create_teachers.rb
new file mode 100644
index 0000000..7e2dc7c
--- /dev/null
+++ b/db/migrate/20110614041733_create_teachers.rb
@@ -0,0 +1,16 @@
+class CreateTeachers < ActiveRecord::Migration
+  def self.up
+    create_table :teachers do |t|
+      t.string :control_number, :null => false
+      t.string :name
+      t.string :paternal_surname
+      t.string :maternal_surname
+      t.integer :user_id
+      t.timestamps
+    end
+  end
+
+  def self.down
+    drop_table :teachers
+  end
+end
diff --git a/db/schema.rb b/db/schema.rb
index 36b65fb..963bb4c 100644
--- a/db/schema.rb
+++ b/db/schema.rb
@@ -1,45 +1,55 @@
-# This file is auto-generated from the current state of the database. Instead
-# of editing this file, please use the migrations feature of Active Record to
-# incrementally modify your database, and then regenerate this schema definition.
-#
-# Note that this schema.rb definition is the authoritative source for your
-# database schema. If you need to create the application database on another
-# system, you should be using db:schema:load, not running all the migrations
-# from scratch. The latter is a flawed and unsustainable approach (the more migrations
-# you'll amass, the slower it'll run and the greater likelihood for issues).
-#
-# It's strongly recommended to check this file into your version control system.
-
-ActiveRecord::Schema.define(:version => 20110524033856) do
-
-  create_table "users", :force => true do |t|
-    t.string   "email",                                 :default => "", :null => false
-    t.string   "encrypted_password",     :limit => 128, :default => "", :null => false
-    t.string   "reset_password_token"
-    t.datetime "reset_password_sent_at"
-    t.datetime "remember_created_at"
-    t.integer  "sign_in_count",                         :default => 0
-    t.datetime "current_sign_in_at"
-    t.datetime "last_sign_in_at"
-    t.string   "current_sign_in_ip"
-    t.string   "last_sign_in_ip"
-    t.string   "password_salt"
-    t.string   "confirmation_token"
-    t.datetime "confirmed_at"
-    t.datetime "confirmation_sent_at"
-    t.integer  "failed_attempts",                       :default => 0
-    t.string   "unlock_token"
-    t.datetime "locked_at"
-    t.string   "authentication_token"
-    t.datetime "created_at"
-    t.datetime "updated_at"
-    t.string   "username"
-  end
-
-  add_index "users", ["authentication_token"], :name => "index_users_on_authentication_token", :unique => true
-  add_index "users", ["confirmation_token"], :name => "index_users_on_confirmation_token", :unique => true
-  add_index "users", ["email"], :name => "index_users_on_email", :unique => true
-  add_index "users", ["reset_password_token"], :name => "index_users_on_reset_password_token", :unique => true
-  add_index "users", ["unlock_token"], :name => "index_users_on_unlock_token", :unique => true
-
-end
+# This file is auto-generated from the current state of the database. Instead
+# of editing this file, please use the migrations feature of Active Record to
+# incrementally modify your database, and then regenerate this schema definition.
+#
+# Note that this schema.rb definition is the authoritative source for your
+# database schema. If you need to create the application database on another
+# system, you should be using db:schema:load, not running all the migrations
+# from scratch. The latter is a flawed and unsustainable approach (the more migrations
+# you'll amass, the slower it'll run and the greater likelihood for issues).
+#
+# It's strongly recommended to check this file into your version control system.
+
+ActiveRecord::Schema.define(:version => 20110614041733) do
+
+  create_table "teachers", :force => true do |t|
+    t.string   "control_number",   :null => false
+    t.string   "name"
+    t.string   "paternal_surname"
+    t.string   "maternal_surname"
+    t.integer  "user_id"
+    t.datetime "created_at"
+    t.datetime "updated_at"
+  end
+
+  create_table "users", :force => true do |t|
+    t.string   "email",                                 :default => "", :null => false
+    t.string   "encrypted_password",     :limit => 128, :default => "", :null => false
+    t.string   "reset_password_token"
+    t.datetime "reset_password_sent_at"
+    t.datetime "remember_created_at"
+    t.integer  "sign_in_count",                         :default => 0
+    t.datetime "current_sign_in_at"
+    t.datetime "last_sign_in_at"
+    t.string   "current_sign_in_ip"
+    t.string   "last_sign_in_ip"
+    t.string   "password_salt"
+    t.string   "confirmation_token"
+    t.datetime "confirmed_at"
+    t.datetime "confirmation_sent_at"
+    t.integer  "failed_attempts",                       :default => 0
+    t.string   "unlock_token"
+    t.datetime "locked_at"
+    t.string   "authentication_token"
+    t.datetime "created_at"
+    t.datetime "updated_at"
+    t.string   "username"
+  end
+
+  add_index "users", ["authentication_token"], :name => "index_users_on_authentication_token", :unique => true
+  add_index "users", ["confirmation_token"], :name => "index_users_on_confirmation_token", :unique => true
+  add_index "users", ["email"], :name => "index_users_on_email", :unique => true
+  add_index "users", ["reset_password_token"], :name => "index_users_on_reset_password_token", :unique => true
+  add_index "users", ["unlock_token"], :name => "index_users_on_unlock_token", :unique => true
+
+end
diff --git a/test/factories.rb b/test/factories.rb
index 9403cfe..ebc3734 100644
--- a/test/factories.rb
+++ b/test/factories.rb
@@ -1,6 +1,14 @@
 Factory.define :user do |u|
-  u.username  'teacher'
-  u.email     'teacher@school.com'
+  u.sequence(:username) {|n| "teacher#{n}"}
+  u.sequence(:email) {|n| "teacher#{n}@school.com"}
   u.password  'supersecret'
   u.confirmed_at Time.now
 end
+
+Factory.define :teacher do |t|
+  t.control_number '123'
+  t.name 'Adriana'
+  t.paternal_surname 'Cardenas'
+  t.maternal_surname 'Martinez'
+  t.association :user
+end
diff --git a/test/functional/teachers_controller_test.rb b/test/functional/teachers_controller_test.rb
new file mode 100644
index 0000000..1eaaa97
--- /dev/null
+++ b/test/functional/teachers_controller_test.rb
@@ -0,0 +1,59 @@
+require 'test_helper'
+#was the web request successful? 
+#was the user redirected to the right page? 
+#was the user successfully authenticated? 
+#was the correct object stored in the response template? 
+#was the appropriate message displayed to the user in the view? 
+#get 
+#post 
+#put 
+#head 
+#delete
+
+class TeachersControllerTest < ActionController::TestCase
+  setup do
+    @teacher = teachers(:one)
+  end
+
+  test "should get index" do
+    get :index
+    assert_response :success
+    assert_not_nil assigns(:teachers)
+  end
+
+  test "should get new" do
+    get :new
+    assert_response :success
+  end
+
+  test "should create teacher" do
+    assert_difference('teacher.count') do
+      post :create, :teacher => @teacher.attributes
+    end
+
+    assert_redirected_to teacher_path(assigns(:teacher))
+  end
+
+  test "should show teacher" do
+    get :show, :id => @teacher.to_param
+    assert_response :success
+  end
+
+  test "should get edit" do
+    get :edit, :id => @teacher.to_param
+    assert_response :success
+  end
+
+  test "should update teacher" do
+    put :update, :id => @teacher.to_param, :teacher => @teacher.attributes
+    assert_redirected_to teacher_path(assigns(:teacher))
+  end
+
+  test "should destroy teacher" do
+    assert_difference('teacher.count', -1) do
+      delete :destroy, :id => @teacher.to_param
+    end
+
+    assert_redirected_to teachers_path
+  end
+end
diff --git a/test/unit/teacher_test.rb b/test/unit/teacher_test.rb
new file mode 100644
index 0000000..c5b4621
--- /dev/null
+++ b/test/unit/teacher_test.rb
@@ -0,0 +1,29 @@
+require 'test_helper'
+
+class TeacherTest < ActiveSupport::TestCase
+
+  test "unique control number" do
+    assert Factory.create( :teacher)
+    assert teacher = Factory.build( :teacher)
+	  assert teacher.invalid?
+  end
+  
+  test "must have a name" do
+    assert teacher = Factory.build( :teacher, :name => nil )
+    assert teacher.invalid?
+  end
+  
+  test "must have at least paternal surname" do
+    assert teacher = Factory.build( :teacher, :paternal_surname => nil)
+    assert teacher.invalid?
+  end
+  
+  test "create teacher" do
+    assert Factory.build( :teacher, :control_number => '666', :name => 'Manuel', :paternal_surname => 'Bernal')
+    assert_difference 'Teacher.count'
+  end
+  
+  
+  
+  
+end
\ No newline at end of file
-- 
1.7.3.1.msysgit.0

